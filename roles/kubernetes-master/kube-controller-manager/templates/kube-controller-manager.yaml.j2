apiVersion: v1
kind: Pod
metadata:
  name: kube-controller-manager
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-controller-manager
    image: {{ kubernetes.hyperkubeImage }}
    command:
    - /hyperkube
    - controller-manager
    - --master=http://127.0.0.1:8080
    - --leader-elect=true
    - --service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --root-ca-file=/etc/kubernetes/ssl/ca.pem
{% if kubernetes.cloudProvider is defined and kubernetes.cloudProvider != "" %}
    - --cloud-provider={{ kubernetes.cloudProvider }}
{% endif %}
{% if custom.flocker_enabled == 'true' %}
    env:
    - name: FLOCKER_CONTROL_SERVICE_HOST
      value: control-service
    - name: FLOCKER_CONTROL_SERVICE_PORT
      value: "4523"
    - name: FLOCKER_CONTROL_SERVICE_CA_FILE
      value: /etc/flocker/cluster.crt
    - name: FLOCKER_CONTROL_SERVICE_CLIENT_KEY_FILE
      value: /etc/flocker/kubelet.key
    - name: FLOCKER_CONTROL_SERVICE_CLIENT_CERT_FILE
      value: /etc/flocker/kubelet.crt
{% endif %}
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10252
      initialDelaySeconds: 15
      timeoutSeconds: 1
    volumeMounts:
    - mountPath: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
{% if custom.flocker_enabled == 'true' %}
    - mountPath: /etc/flocker
      name: flocker-certs-host
      readOnly: true
{% endif %}
  volumes:
  - hostPath:
      path: /etc/kubernetes/ssl
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
{% if custom.flocker_enabled == 'true' %}
  - hostPath:
      path: /etc/flocker
    name: flocker-certs-host
{% endif %}
